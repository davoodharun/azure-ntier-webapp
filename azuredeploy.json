{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "environment":{
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      },
      "allowedValues": [
        "stag",
        "prod"
      ]
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "QuestionMarkKeyVault"
    },
    "orchestrationResourceGroupName": {
      "type": "string",
      "defaultValue": "QuestionmarkOrchestration"
    },
    "sasTokenTemplates": {
      "type": "string",
      "defaultValue": ""
    },
    "sasTokenScripts": {
      "type": "string",
      "defaultValue": ""
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "NSG"
    },
    "numberOfSHRInstances": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 5
    },
    "numberOfDELInstances": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 5
    },
    "adVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the AD VMs Created"
      },
      "defaultValue": "Standard_D1_v2"
    },
    "sqlVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_D2_v2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the SQL VMs Created"
      },
      "defaultValue": "Standard_D2_v2"
    },
    "SHRVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_D2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the SQL VMs Created"
      },
      "defaultValue": "Standard_D2_v2"
    },
    "DELVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_D2_v2",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the SQL VMs Created"
      },
      "defaultValue": "Standard_D2_v2"
    },
    "CFGVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_D1_v2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the SQL VMs Created"
      },
      "defaultValue": "Standard_D1_v2"
    },
    "MGTVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS1",
        "Standard_D1_v2",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the SQL VMs Created"
      },
      "defaultValue": "Standard_D1_v2"
    },
    "witnessVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_D1_v2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the Witness VM Created"
      },
      "defaultValue": "Standard_D1_v2"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "contoso.local"
    },
    "domainJoinUserName": {
      "type": "string",
      "defaultValue": "contoso\\adminuser"
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service Account name"
      },
      "defaultValue": "sqlservice"
    },
    "sqlStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS"
      ],
      "metadata": {
        "description": "The type of the Sql Server Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "dcStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the DC Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "SHRStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the DC Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "DELStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the DC Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "CFGStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the DC Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "MGTStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the DC Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "gatewaySkuName": {
      "type": "string",
      "defaultValue":"Standard_Small"
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNET in CIDR format"
      },
      "defaultValue": "10.200.0.0/16"
    },
    "staticSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet static IPs are allocated from in the new VNET"
      },
      "defaultValue": "10.200.1.0/24"
    },
    "appSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the SQL subnet created in the new VNET"
      },
      "defaultValue": "10.200.0.0/24"
    },
    "appGatewaySubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the SQL subnet created in the new VNET"
      },
      "defaultValue": "10.200.2.0/24"
    },
    "gatewaySubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the SQL subnet created in the new VNET"
      },
      "defaultValue": "10.200.6.0/24"
    },
    "sql0IPAddress": {
      "type":"string",
      "defaultValue":"10.200.1.7"
    },
    "sql1IPAddress": {
      "type":"string",
      "defaultValue":"10.200.1.8"
    },
    "sqlwIPAddress": {
      "type":"string",
      "defaultValue":"10.200.1.9"
    },
    "adPDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new AD VM"
      },
      "defaultValue": "10.200.1.4"
    },
    "adBDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new backup AD VM"
      },
      "defaultValue": "10.200.1.6"
    },
    "SHRNICIPAddresses": {
      "type": "array",
      "metadata": {
        "description": "The IP address of the new backup AD VM"
      },
      "defaultValue": [{"IpAddress":"10.200.0.6"}, {"IpAddress":"10.200.0.7"}]
    },
    "DELNICIPAddresses": {
      "type": "array",
      "metadata": {
        "description": "The IP address of the new backup AD VM"
      },
      "defaultValue": [{"IpAddress":"10.200.0.8"}, {"IpAddress":"10.200.0.9"}]
    },
    "CFGNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new backup AD VM"
      },
      "defaultValue": "10.200.0.4"
    },
    "MGTNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new backup AD VM"
      },
      "defaultValue": "10.200.0.5"
    },
    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new SQL Server Internal Load Balancer"
      },
      "defaultValue": "10.200.1.5"
    },
    "deploymentPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS Prefix for the Public IP Address for the Always On Cluster"
      },
      "defaultValue": "aodns"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of virtual network to be created"
      },
      "defaultValue": "autohav2VNET"
    },
    "templatesBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "Linked Templates base url"
      },
      "default": "https://github.com/davoodharun/azure-ntier-webapp/nestedtemplates"
    },
    "scriptsBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "DSC Scripts base url"
      },
      "default": "https://github.com/davoodharun/azure-ntier-webapp/DSC"
    },
    "autoPatchingDay": {
      "type": "string",
      "allowedValues": [
        "Never",
        "Everyday",
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "metadata": {
        "description": "The day of a week for auto patching"
      },
      "defaultValue": "Sunday"
    },
    "autoPatchingStartHour": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "20",
        "21",
        "22",
        "23"
      ],
      "metadata": {
        "description": "The start hour of a day for auto patching"
      },
      "defaultValue": "2"
    },
    "sqlAOAGName": {
      "type": "string",
      "metadata": {
        "description": "The Sql AlwaysOn Group Name"
      },
      "defaultValue": "alwayson-ag"
    },
    "sqlAOListenerPort": {
      "type": "string",
      "metadata": {
        "description": "The Sql AG Listener port"
      },
      "defaultValue": "1433"
    },
    "sqlAOListenerName": {
      "type": "string",
      "metadata": {
        "description": "The Sql AG Listener Name"
      },
      "defaultValue": "alwayson-ag-listener"
    },
    "sqlServerVersion": {
      "type": "string",
      "allowedValues": [
        "SQL2012SP3-WS2012R2",
        "SQL2014SP1-WS2012R2",
        "SQL2016-WS2012R2"
      ],
      "metadata": {
        "description": "The Sql Server Version"
      },
      "defaultValue": "SQL2016-WS2012R2"
    },
    "numberOfSqlVMDisks": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3",
        "4"
      ],
      "metadata": {
        "description": "The Sql VM Disk Size"
      },
      "defaultValue": "2"
    },
    "workloadType": {
      "type": "string",
      "allowedValues": [
        "GENERAL",
        "OLTP",
        "DW"
      ],
      "metadata": {
        "description": "The Sql VM work load type: GENERAL - general work load; DW - datawear house work load; OLTP - Transactional processing work load"
      },
      "defaultValue": "GENERAL"
    }
  },
  "variables": {
    "suffixes": {
      "storageAccounts": "sa"
    },
    "lbSettings": {
      "rdpLBFE": "rdpLBFE",
      "sqlLBFE": "sqlLBFE",
      "adLBBE": "adLBBE",
      "sqlLBBE": "sqlLBBE",
      "rdpLBName": "rdpLoadBalancer",
      "sqlLBName": "sqlLoadBalancer"
    },
    "subnetNames": {
      "staticSubnetName": "[concat('dbdc', parameters('environment'))]",
      "appSubnetName": "[concat('app', parameters('environment'))]",
      "gatewaySubnetName": "[concat('GatewaySubnet', parameters('environment'))]",
      "appGatewaySubnetName": "[concat('appGatewaySubnet', parameters('environment'))]"
    },
    "applicationGatewayNSGName": "applicationGatewayNSG",
    "MGTNSGName": "[concat('MGTNSG', parameters('environment'))]",
    "DCNSGName": "[concat('DCNSG', parameters('environment'))]",
    "DELNSGName": "[concat('DELNSG', parameters('environment'))]",
    "SQLNSGName": "[concat('SQLNSG', parameters('environment'))]",
    "CFGNSGName": "[concat('CFGNSG', parameters('environment'))]",
    "SHRNSGName": "[concat('SHRNSG', parameters('environment'))]",
    "LBNSGName": "[concat('LBNSG', parameters('environment'))]",
    "numberOfDELInstances": "[length(parameters('DELNICIPAddresses'))]",
    "numberOfSHRInstances": "[length(parameters('SHRNICIPAddresses'))]",
    "staticIPSHRStart": 6,
    "staticIPDELStart": "[add(variables('staticIPSHRStart'), variables('numberOfSHRInstances'))]",
    "RDPNAT": "RDP",
    "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
    "primaryDCIPAddressName": "primaryDCIP",
    "backupDCIPAddressName": "backupDCIP",
    "sql1AddressName": "sql1IP",
    "sql0AddressName": "sql0IP",
    "vmSettings": {
      "availabilitySets": {
        "sqlAvailabilitySetName": "[concat('sqlAvailabilitySet', parameters('environment'))]",
        "adAvailabilitySetName": "[concat('adAvailabilitySet-', parameters('environment'))]",
        "SHRAvailabilitySetName": "[concat('SHR_AvailabilitySet-', parameters('environment'))]",
        "DELAvailabilitySetName": "[concat('DEL_AvailabilitySet-', parameters('environment'))]",
        "CFGAvailabilitySetName": "[concat('CFG_AvailabilitySet-', parameters('environment'))]",
        "MGTAvailbilitySetName": "[concat('MGT_AvailabilitySet-', parameters('environment'))]"
      },
      "noOfSqlVMs": 2,
      "vmContainerName": "vhds",
      "adPDCVMName": "[concat('AZ-PDC-VM-', parameters('environment'))]",
      "adBDCVMName": "[concat('AZ-BDC-VM-', parameters('environment'))]",
      "sqlVMName": "[concat(parameters('environment'), 'sqlserver-')]",
      "sqlwVMName": "[concat('cluster-fsw', parameters('environment'))]",
      "SHRVMName": "[concat('AZ-SHR-VM', parameters('environment'))]",
      "DELVMName": "[concat('AZ-DEL-VM', parameters('environment'))]",
      "CFGVMName": "[concat('AZ-CFG-VM', parameters('environment'))]",
      "MGTVMName": "[concat('AZ-MGT-VM', parameters('environment'))]",
      "windowsImagePublisher": "MicrosoftWindowsServer",
      "windowsImageOffer": "WindowsServer",
      "windowsImageSKU": "2016-Datacenter",
      "appImageOffer": "WindowsServer",
      "appImageSKU": "2012-R2-Datacenter",
      "sqlImagePublisher": "MicrosoftSQLServer",
      "sqlImageOffer": "[parameters('sqlServerVersion')]",
      "rdpPort": 3389,
      "windowsDiskSize": 128,
      "sqlDiskSize": 1000
    },
    "sqlAOEPName": "[concat(parameters('deploymentPrefix'),'-hadr')]",
    "sharePath": "[concat(parameters('deploymentPrefix'),'-fsw')]",
    "clusterName": "[concat(parameters('deploymentPrefix'),'-fc')]",
    "adPDCNicName": "[concat('adPDC-nic', parameters('environment'))]",
    "adBDCNicName": "[concat('adBDC-nic', parameters('environment'))]",
    "sqlwNicName": "[concat('sqlw-nic', parameters('environment'))]",
    "sqlNicName": "[concat('sql-nic', parameters('environment'))]",
    "SHRNICName": "[concat('SHR-nic', parameters('environment'))]",
    "DELNICName": "[concat('DEL-nic', parameters('environment'))]",
    "CFGNICName": "[concat('CFG-nic', parameters('environment'))]",
    "MGTNICName": "[concat('MGT-nic', parameters('environment'))]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkNameWithSuffix'))]",
    "staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
    "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
    "appSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').appSubnetName)]",
    "appGatewaySubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').appSubnetName)]",
    "ids": {
      "adNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
      "rdplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
      "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]"
    },
    "derivedIds": {
      "dcNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('DCNSGName'))]",
      "sqlNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('SQLNSGName'))]",
      "delNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('DELNSGName'))]",
      "shrNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('SHRNSGName'))]",
      "cfgNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('CFGNSGName'))]",
      "lbNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('LBNSGName'))]",
      "mgtNSG": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('MGTNSGName'))]",
      "adIPConfigID": "[concat(variables('ids').adNicId,'/ipConfigurations/ipconfig1')]",
      "rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
      "adRDPNATRuleID": "[concat(variables('ids').rdplbID,'/inboundNatRules/',variables('RDPNAT'))]",
      "adBEAddressPoolID": "[concat(variables('ids').rdplbID,'/backendAddressPools/',variables('lbSettings').adLBBE)]",
      "sqlBEAddressPoolID": "[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
      "sqllbFEConfigID": "[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
      "sqllbProbeID": "[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]"
    },
    "SQL2012SP2-WS2012R2": "Enterprise",
    "SQL2012SP3-WS2012R2": "Enterprise",
    "SQL2014-WS2012R2": "Enterprise",
    "SQL2014SP1-WS2012R2": "Enterprise",
    "SQL2016-WS2012R2": "Enterprise",
    "Monday": true,
    "Tuesday": true,
    "Wednesday": true,
    "Thursday": true,
    "Friday": true,
    "Saturday": true,
    "Sunday": true,
    "Never": false,
    "Everyday": true,
    "subnets": [
      {
        "name": "[variables('subnetNames').staticSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('staticSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').appSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('appSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').gatewaySubnetName]",
        "properties": {
          "addressPrefix": "[parameters('gatewaySubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').appGatewaySubnetName]",
        "properties": {
          "addressPrefix": "[parameters('appGatewaySubnet')]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('lbNSGName'))]"
          }
        }
      }
    ],
    "virtualNetworkNameWithSuffix": "[concat(parameters('virtualNetworkName'), uniqueString(resourceGroup().id))]",
    "resourceNames": {
      "sqlStorageAccountName": "[concat(uniqueString(resourceGroup().id), 'sql', parameters('environment'))]",
      "dcStorageAccountName": "[concat(uniqueString(resourceGroup().id), 'dc', parameters('environment'))]",
      "SHRStorageAccountName": "[concat(uniqueString(resourceGroup().id), 'shr', parameters('environment'))]",
      "DELStorageAccountName": "[concat(uniqueString(resourceGroup().id), 'del', parameters('environment'))]",
      "CFGStorageAccountName": "[concat(uniqueString(resourceGroup().id), 'cfg', parameters('environment'))]",
      "MGTStorageAccountName": "[concat(uniqueString(resourceGroup().id), 'mgt', parameters('environment'))]",
      "appDiagStorageAccountName": "[concat(uniqueString(resourceGroup().id), 'diag', parameters('environment'))]",
      "applicationGatewayName": "[concat('applicationGateway1', parameters('environment'))]"
    },
    "configuration": {
      "vnetwithDNSTemplateURL": "[concat(parameters('templatesBaseUrl'),'/updateVnetWithDNS.json', parameters('sasTokenTemplates'))]",
      "nicTemplateURL": "[concat(parameters('templatesBaseUrl'),'/updateNic.json', parameters('sasTokenTemplates'))]",
      "sqlLoadBalancerURL": "[concat(parameters('templatesBaseUrl'),'/sqlLoadBalancer.json', parameters('sasTokenTemplates'))]",
      "applicationGatewayURL": "[concat(parameters('templatesBaseUrl'),'/provisioningApplicationGateway.json', parameters('sasTokenTemplates'))]",
      "provisioningNICsSQLADURL": "[concat(parameters('templatesBaseUrl'),'/provisioningNICsSQLAD.json', parameters('sasTokenTemplates'))]",
      "virtualNetworkNSGURL": "[concat(parameters('templatesBaseUrl'),'/virtualNetworkNSG.json', parameters('sasTokenTemplates'))]",
      "provisioningVMsSQLADURL": "[concat(parameters('templatesBaseUrl'),'/provisioningVMsSQLAD.json', parameters('sasTokenTemplates'))]",
      "provisioningAppVMsURL": "[concat(parameters('templatesBaseUrl'),'/provisioningAppVMs.json', parameters('sasTokenTemplates'))]",
      "configuringBackupADVMURL": "[concat(parameters('templatesBaseUrl'),'/configuringBackupADVM.json', parameters('sasTokenTemplates'))]",
      "preparingAlwaysOnSqlServerURL": "[concat(parameters('templatesBaseUrl'),'/preparingSqlServer.json', parameters('sasTokenTemplates'))]",
      "configuringAlwaysOnURL": "[concat(parameters('templatesBaseUrl'),'/configuringAlwaysOn.json', parameters('sasTokenTemplates'))]",
      "adPDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateADPDC.ps1.zip', parameters('sasTokenScripts'))]",
      "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
      "adBDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/PrepareADBDC.ps1.zip', parameters('sasTokenScripts'))]",
      "adBDCConfigurationFunction": "PrepareADBDC.ps1\\PrepareADBDC",
      "fswModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFileShareWitness.ps1.zip', parameters('sasTokenScripts'))]",
      "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
      "sqlAOPrepareModulesURL": "[concat(parameters('scriptsBaseUrl'),'/PrepareAlwaysOnSqlServer.ps1.zip', parameters('sasTokenScripts'))]",
      "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
      "createClusterModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFailoverCluster.ps1.zip', parameters('sasTokenScripts'))]",
      "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster",
      "iisModulesURL":"[concat(parameters('scriptsBaseUrl'),'/ContosoWebsite.ps1.zip', parameters('sasTokenScripts'))]",
      "iisConfigurationFunction":"ContosoWebsite.ps1\\ContosoWebsite"
    }
  },
  "resources": [
    {
      "name": "VirtualNetworkNSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "This resource will create storage accounts for Active Directory, SQL Server, File Share Witness and Diagnostics. It will also create the Virtual Network and public IP addresses",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').virtualNetworkNSGURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "nsgName": {
            "value": "[parameters('nsgName')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkNameWithSuffix')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "dcNSGName": {
            "value": "[variables('DCNSGName')]"
          },
          "sqlNSGName": {
            "value": "[variables('SQLNSGName')]"
          },
          "delNSGName": {
            "value": "[variables('DELNSGName')]"
          },
          "cfgNSGName": {
            "value": "[variables('CFGNSGName')]"
          },
          "shrNSGName": {
            "value": "[variables('SHRNSGName')]"
          },
          "mgtNSGName": {
            "value": "[variables('MGTNSGName')]"
          },
          "lbNSGName": {
            "value": "[variables('LBNSGName')]"
          }
        }
      }
    },
    {
      "name": "SQLLoadBalancer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "Create Load Balancers for SQL and DC",
      "dependsOn": [
        "Microsoft.Resources/deployments/VirtualNetworkNSG"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').sqlLoadBalancerURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').sqlLBName]"
          },
          "sqlLBFE": {
            "value": "[variables('lbSettings').sqlLBFE]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('sqlLBIPAddress')]"
          },
          "staticSubnetRef": {
            "value": "[variables('sqlSubnetRef')]"
          },
          "sqlLBBE": {
            "value": "[variables('lbSettings').sqlLBBE]"
          },
          "sqlLBBEID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "sqllbFEConfigID": {
            "value": "[variables('derivedIds').sqllbFEConfigID]"
          },
          "sqllbProbeID": {
            "value": "[variables('derivedIds').sqllbProbeID]"
          },
          "SQLAOProbe": {
            "value": "[variables('SQLAOProbe')]"
          }
        }
      }
    },
    {
      "name": "ProvisioningNICsSQLAD",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SQLLoadBalancer"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningNICsSQLADURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "adPDCNICIPAddress": {
            "value": "[parameters('adPDCNICIPAddress')]"
          },
          "staticSubnetRef": {
            "value": "[variables('staticSubnetRef')]"
          },
          "adBEAddressPoolID": {
            "value": "[variables('derivedIds').adBEAddressPoolID]"
          },
          "adRDPNATRuleID": {
            "value": "[variables('derivedIds').adRDPNATRuleID]"
          },
          "adBDCNicName": {
            "value": "[variables('adBDCNicName')]"
          },
          "adBDCNICIPAddress": {
            "value": "[parameters('adBDCNICIPAddress')]"
          },
          "sqlSubnetRef": {
            "value": "[variables('staticSubnetRef')]"
          },
          "appSubnetRef": {
            "value": "[variables('appSubnetRef')]"
          },
          "sqlBEAddressPoolID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "sqlwNicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "sqlNicName": {
            "value": "[variables('sqlNicName')]"
          },
          "sql0IPAddress": {
            "value": "[parameters('sql0IPAddress')]"
          },
          "sql1IPAddress": {
            "value": "[parameters('sql1IPAddress')]"
          },
          "sqlwIPAddress": {
            "value": "[parameters('sqlwIPAddress')]"
          },
          "sqlNSGid": {
            "value": "[variables('derivedIds').sqlNSG]"
          },
          "dcNSGid": {
            "value": "[variables('derivedIds').dcNSG]"
          }
        }
      }
    },
    {
      "name": "ProvisioningVMsSQLAD",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningNICsSQLAD"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningVMsSQLADURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adPDCVMName": {
            "value": "[variables('vmSettings').adPDCVMName]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.adAvailabilitySetName]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]"
          },
          "sqlStorageAccountName": {
            "value": "[variables('resourceNames').sqlStorageAccountName]"
          },
          "dcStorageAccountName": {
            "value": "[variables('resourceNames').dcStorageAccountName]"
          },
          "SqlStorageAccountType": {
            "value": "[parameters('sqlStorageAccountType')]"
          },
          "DcStorageAccountType": {
            "value": "[parameters('dcStorageAccountType')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adVMSize": {
            "value": "[parameters('adVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "adImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "adImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adPDCConfigurationFunction": {
            "value": "[variables('configuration').adPDCConfigurationFunction]"
          },
          "adPDCModulesURL": {
            "value": "[variables('configuration').adPDCModulesURL]"
          },
          "adBDCVMName": {
            "value": "[variables('vmSettings').adBDCVMName]"
          },
          "adBDCNicName": {
            "value": "[variables('adBDCNicName')]"
          },
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "fswImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "fswImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "fswImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "sqlImagePublisher": {
            "value": "[variables('vmSettings').sqlImagePublisher]"
          },
          "sqlImageOffer": {
            "value": "[variables('vmSettings').sqlImageOffer]"
          },
          "sqlImageSKU": {
            "value": "[variables(parameters('sqlServerVersion'))]"
          },
          "witnessVMSize": {
            "value": "[parameters('witnessVMSize')]"
          },
          "sqlwVMName": {
            "value": "[variables('vmSettings').sqlwVMName]"
          },
          "sqlwNicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "sqlNicName": {
            "value": "[variables('sqlNicName')]"
          }
        }
      }
    },
    {
      "name": "UpdatingDNStoPrimaryADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningVMsSQLAD"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkNameWithSuffix')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adPDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "ConfiguringBackupADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningVMsSQLAD"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringBackupADVMURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adBDCVMName": {
            "value": "[variables('vmSettings').adBDCVMName]"
          },
          "adminUserName": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adBDCConfigurationFunction": {
            "value": "[variables('configuration').adBDCConfigurationFunction]"
          },
          "adBDCModulesURL": {
            "value": "[variables('configuration').adBDCModulesURL]"
          },
          "adPDCNICIPAddress": {
            "value": "[parameters('adPDCNICIPAddress')]"
          }
        }
      }
    },
    {
      "name": "UpdatingDNSwithBackupADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ConfiguringBackupADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkNameWithSuffix')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "UpdatingSQLWNic",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdatingDNStoPrimaryADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').nicTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "nicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  }
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "UpdatingSQL0Nic",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdatingSQLWNic"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').nicTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "nicName": {
            "value": "[concat(variables('vmSettings').sqlVMName, '0-nic')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[variables('derivedIds').sqlBEAddressPoolID]"
                    }
                  ]
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "UpdatingSQL1Nic",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdatingSQL0Nic"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').nicTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "nicName": {
            "value": "[concat(variables('vmSettings').sqlVMName, '1-nic')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[variables('derivedIds').sqlBEAddressPoolID]"
                    }
                  ]
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "PreparingAlwaysOnSqlServer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
          "Microsoft.Resources/deployments/UpdatingSQL1Nic"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').preparingAlwaysOnSqlServerURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sqlAOPrepareModulesURL": {
            "value": "[variables('configuration').sqlAOPrepareModulesURL]"
          },
          "sqlAOPrepareConfigurationFunction": {
            "value": "[variables('configuration').sqlAOPrepareConfigurationFunction]"
          },
          "sqlAOEPName": {
            "value": "[variables('sqlAOEPName')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultId')]"
              },
              "secretName": "sqlServerServiceAccountPassword"
            }
          },
          "sharePath": {
            "value": "[variables('sharePath')]"
          },
          "adPDCVMName": {
            "value": "[variables('vmSettings').adPDCVMName]"
          },
          "sqlwVMName": {
            "value": "[variables('vmSettings').sqlwVMName]"
          },
          "fswModulesURL": {
            "value": "[variables('configuration').fswModulesURL]"
          },
          "fswConfigurationFunction": {
            "value": "[variables('configuration').fswConfigurationFunction]"
          },
          "autoPatchingDay": {
            "value": "[parameters('autoPatchingDay')]"
          },
          "autoPatchingStartHour": {
            "value": "[parameters('autoPatchingStartHour')]"
          },
          "autoPatchingEnable": {
            "value": "[variables(parameters('autoPatchingDay'))]"
          },
          "numberOfDisks": {
            "value": "[parameters('numberOfSqlVMDisks')]"
          },
          "workloadType": {
            "value": "[parameters('workloadType')]"
          }
        }
      }
    },
    {
      "name": "ConfiguringAlwaysOn",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/PreparingAlwaysOnSqlServer"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringAlwaysOnURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sqlAOEPName": {
            "value": "[variables('sqlAOEPName')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVaultId')]"
              },
              "secretName": "sqlServerServiceAccountPassword"
            }
          },
          "createClusterModulesURL": {
            "value": "[variables('configuration').createClusterModulesURL]"
          },
          "createClusterConfigurationFunction": {
            "value": "[variables('configuration').createClusterConfigurationFunction]"
          },
          "clusterName": {
            "value": "[variables('clusterName')]"
          },
          "sharePath": {
            "value": "[variables('sharePath')]"
          },
          "sqlAOAGName": {
            "value": "[parameters('sqlAOAGName')]"
          },
          "sqlAOListenerName": {
            "value": "[parameters('sqlAOListenerName')]"
          },
          "sqlAOListenerPort": {
            "value": "[parameters('sqlAOListenerPort')]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').sqlLBName]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('sqlLBIPAddress')]"
          },
          "adPDCVMName": {
            "value": "[variables('vmSettings').adPDCVMName]"
          },
          "sqlwVMName": {
            "value": "[variables('vmSettings').sqlwVMName]"
          },
          "numberOfDisks": {
            "value": "[parameters('numberOfSqlVMDisks')]"
          },
          "workloadType": {
            "value": "[parameters('workloadType')]"
          }
        }
      }
    }
  ]
}
