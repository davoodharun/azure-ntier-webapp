{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/davoodharun/azure-ntier-webapp/master/"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "configuration": {
      "network": {
        "dnsPrefix": "bprintaz",
        "domainName": "mydomain.local",
        "virtualNetworkName": "n-tier-sql-vnet",
        "virtualNetworkAddressRange": "10.0.0.0/16",
        "availabilitySets": {
          "names": {
            "ad": "adAvailabiltySet",
            "sql": "sqlAvailabilitySet",
            "mgt": "mgtAvailabilitySet",
            "web": "webAvailabilitySet"
          }
        },
        "subnets": {
          "names": {
            "mgt": "mgt",
            "ad": "ad",
            "sql": "sql",
            "web": "web"
          },
          "addressRanges": {
            "web": "10.0.3.0/24",
            "mgt": "10.0.2.0/24",
            "sql": "10.0.1.0/24",
            "ad": "10.0.0.0/24"
          }
        },
        "networkInterfaces": {
          "names": {
            "mgt": "mgt-nic",
            "adpdc": "adpdc-nic",
            "adbdc": "adbdc-nic",
            "sql0": "sql-nic0",
            "sql1": "sql-nic1",
            "sqlw": "sql-nicw",
            "web": "web-nic"
          }
        },
        "privateIPAddresses": {
          "mgt": "10.0.2.4",
          "adpdc": "10.0.0.4",
          "adbdc": "10.0.0.5",
          "sql1": "10.0.1.4",
          "sql0": "10.0.1.5",
          "sqlw": "10.0.1.6",
          "sqlLB": "10.0.1.7",
          "web": "web"
        }
      },
      "storageAccounts": {
        "names": {
          "vhdStorageAccountNameAD": "[concat(uniquestring(resourceGroup().id), 'ad')]",
          "vhdStorageAccountNameSQL": "[concat(uniquestring(resourceGroup().id), 'sql')]",
          "vhdStorageAccountNameSQLW": "[concat(uniquestring(resourceGroup().id), 'sqlw')]",
          "vhdStorageAccountNameMGT": "[concat(uniquestring(resourceGroup().id), 'mgt')]",
          "vhdStorageAccountNameWEB": "[concat(uniquestring(resourceGroup().id), 'web')]",
          "diagnosticsStorageAccountNameAD": "[concat(uniquestring(resourceGroup().id), 'addiag')]",
          "diagnosticsStorageAccountNameSQL": "[concat(uniquestring(resourceGroup().id), 'sqldiag')]",
          "diagnosticsStorageAccountNameMGT": "[concat(uniquestring(resourceGroup().id), 'mgtdiag')]",
          "diagnosticsStorageAccountNameWEB": "[concat(uniquestring(resourceGroup().id), 'webdiag')]"
        },
        "types": {
          "activeDirectory": "Standard_LRS",
          "sql": "Standard_LRS",
          "sqlw": "Standard_LRS",
          "mgt": "Standard_LRS",
          "web": "Standard_LRS",
          "sqldiag": "Standard_LRS"
        }
      },
      "loadBalancers": {
        "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
        "names": {
          "rdpLBFE": "rdpLBFE",
          "sqlFE": "sqlLBFE",
          "adLBBE": "adLBBE",
          "sqlBE": "sqlLBBE",
          "rdpLB": "rdpLoadBalancer",
          "sql": "sqlLoadBalancer"
        }
      },
      "virtualMachines": {
        "names": {
          "mgt": "10.0.2.4",
          "adpdc": "adpdc-vm",
          "adbdc": "adbdc-vm",
          "sql1": "10.0.1.4",
          "sql0": "10.0.1.5",
          "sqlw": "10.0.1.6",
          "sqlLB": "10.0.1.7",
          "web": "web"
        },
        "ad": {
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "sku": "2016-Datacenter",
          "size":"Standard_DS2_v2",
          "diskSize": 1000,
        },
        "sql0":{
          "name": "sql0-vm",
          "offer": "SQL2016-WS2012R2",
          "publisher": "MicrosoftSQLServer",
          "sku": "Enterprise",
          "size":"Standard_D2_v2"
        },
        "sql1":{
          "name": "sql1-vm",
          "offer": "SQL2016-WS2012R2",
          "publisher": "MicrosoftSQLServer",
          "sku": "Enterprise",
          "size":"Standard_D2_v2"
        },
        "sqlw":{
          "name": "sqlw-vm",
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "sku": "2016-Datacenter",
          "size":"Standard_D1_v2"
        },
        "mgt":{
          "name": "mgt-vm",
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "sku": "2016-Datacenter",
          "size":"Standard_D1_v2"
        },
        "web":{
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "sku": "2016-Datacenter",
          "size":"Standard_DS2_v2"
        }
      },
      "sqlAOEPName": "aodns-hadr",
      "sharePath": "aodns-fsw",
      "clusterName": "aodns-fc",
      "numberOfDisks": 2,
      "workloadType": "GENERAL",
      "autoPatchingDay": "Sunday",
      "autoPatchingStartHour": 2,
      "numberOfSqlVMDisks": "2"
    },
    "references": {
      "availabilitySets": {
        "ad": "[resourceId('Microsoft.Compute/availabilitySets', variables('configuration').network.availabilitySets.names.ad)]",
        "sql": "[resourceId('Microsoft.Compute/availabilitySets', variables('configuration').network.availabilitySets.names.sql)]",
        "mgt": "[resourceId('Microsoft.Compute/availabilitySets', variables('configuration').network.availabilitySets.names.mgt)]",
        "web": "[resourceId('Microsoft.Compute/availabilitySets', variables('configuration').network.availabilitySets.names.web)]"
      },
      "subnets": {
        "list": [
          {
            "name": "[variables('configuration').network.subnets.names.ad]",
            "properties": {
              "addressPrefix": "[variables('configuration').network.subnets.addressRanges.ad]"
            }
          },
          {
            "name": "[variables('configuration').network.subnets.names.sql]",
            "properties": {
              "addressPrefix": "[variables('configuration').network.subnets.addressRanges.sql]"
            }
          },
          {
            "name": "[variables('configuration').network.subnets.names.mgt]",
            "properties": {
              "addressPrefix": "[variables('configuration').network.subnets.addressRanges.mgt]"
            }
          },
          {
            "name": "[variables('configuration').network.subnets.names.web]",
            "properties": {
              "addressPrefix": "[variables('configuration').network.subnets.addressRanges.web]"
            }
          }
        ],
        "ad": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('configuration').network.virtualNetworkName, variables('configuration').network.subnets.names.ad)]",
        "mgt": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('configuration').network.virtualNetworkName, variables('configuration').network.subnets.names.mgt)]",
        "sql": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('configuration').network.virtualNetworkName, variables('configuration').network.subnets.names.sql)]",
        "web": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('configuration').network.virtualNetworkName, variables('configuration').network.subnets.names.web)]"
      },
      "loadBalancers": {
        "sql": "[resourceId('Microsoft.Network/loadBalancers', variables('configuration').loadBalancers.names.sql)]"
      }
    },
    "derivedReferences": {
      "sqlBEAddressPoolID": "[concat(variables('references').loadBalancers.sql,'/backendAddressPools/', variables('configuration').loadBalancers.names.sqlBE)]",
      "sqllbFEConfigID": "[concat(variables('references').loadBalancers.sql,'/frontendIPConfigurations/', variables('configuration').loadBalancers.names.sqlFE)]",
      "sqllbProbeID": "[concat(variables('references').loadBalancers.sql,'/probes/',variables('configuration').loadBalancers.SQLAOProbe)]"
    },
    "templateLinks": {
      "vnetnew": "[concat(parameters('artifactsLocation'), 'vnetnew.json')]",
      "updateNic": "[concat(parameters('artifactsLocation'),'/nestedtemplates/updateNic.json')]",
      "preparingAlwaysOnSqlServer": "[concat(parameters('artifactsLocation'),'/nestedtemplates/preparingSqlServer.json')]",
      "configuringAlwaysOn": "[concat(parameters('artifactsLocation'),'/nestedtemplates/configuringAlwaysOn.json')]",
      "loadBalancers": "[concat(parameters('artifactsLocation'),'loadbalancer.json')]",
      "sqlLoadBalancer": "[concat(parameters('artifactsLocation'),'/nestedtemplates/sqlLoadBalancer.json')]",
      "activeDirectory": "[concat(parameters('artifactsLocation'), 'activedirectory.json')]",
      "sqlAlwaysOn": "[concat(parameters('artifactsLocation'), 'sqlalwayson.json')]",
      "vnetTemplate": "[concat(parameters('artifactsLocation'),'/nestedtemplates/updateVnetWithDNS.json')]",
      "configureADBDC": "[concat(parameters('artifactsLocation'),'/nestedtemplates/configureADBDC.json')]",
      "nicTemplate": "[concat(parameters('artifactsLocation'),'/nestedtemplates/nic.json')]"
    },
    "modules": {
      "createCluster": "[concat(parameters('artifactsLocation'),'/CreateFailoverCluster.ps1.zip')]",
      "sqlAOPrepare": "[concat(parameters('artifactsLocation'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
      "fileShareWitness": "[concat(parameters('artifactsLocation'),'/CreateFileShareWitness.ps1.zip')]",
      "adPDC": "[concat(parameters('artifactsLocation'),'/DSC/CreateADPDC.ps1.zip')]",
      "adBDCConfigure": "[concat(parameters('artifactsLocation'),'/DSC/ConfigureADBDC.ps1.zip')]",
      "adBDCPreparation": "[concat(parameters('artifactsLocation'),'/DSC/PrepareADBDC.ps1.zip')]",

    },
    "functions": {
      "sqlAOPrepareConfiguration": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
      "createClusterConfiguration": "CreateFailoverCluster.ps1\\CreateFailoverCluster",
      "fileShareWitnessConfiguration": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
      "adPDCConfiguration": "CreateADPDC.ps1\\CreateADPDC",
      "adBDCConfiguration": "ConfigureADBDC.ps1\\ConfigureADBDC",
      "adBDCPreparation": "PrepareADBDC.ps1\\PrepareADBDC",
    }
  },
  "resources": [
    {
      "name": "VirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "Deploys vnet, 4 subnets, storage accounts, network interfaces, and availabilitySets for ad, sql, and mgt",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateLinks').vnetnew]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('configuration').network.virtualNetworkName]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('configuration').network.virtualNetworkAddressRange]"
          },
          "mgtSubnetName": {
            "value": "[variables('configuration').network.subnets.names.mgt]"
          },
          "sqlSubnetName": {
            "value": "[variables('configuration').network.subnets.names.sql]"
          },
          "adSubnetName": {
            "value": "[variables('configuration').network.subnets.names.ad]"
          },
          "webSubnetName": {
            "value": "[variables('configuration').network.subnets.names.web]"
          },
          "mgtSubnetPrefix": {
            "value": "[variables('configuration').network.subnets.addressRanges.mgt]"
          },
          "sqlSubnetPrefix": {
            "value": "[variables('configuration').network.subnets.addressRanges.sql]"
          },
          "adSubnetPrefix": {
            "value": "[variables('configuration').network.subnets.addressRanges.ad]"
          },
          "webSubnetPrefix": {
            "value": "[variables('configuration').network.subnets.addressRanges.web]"
          },
          "activeDirectoryStorageAccountName" : {
            "value": "[variables('configuration').storageAccounts.names.vhdStorageAccountNameAD]"
          },
          "activeDirectoryStorageAccountType": {
            "value": "[variables('configuration').storageAccounts.types.activeDirectory]"
          },
          "sqlwStorageAccountType": {
            "value": "[variables('configuration').storageAccounts.types.sqlw]"
          },
          "sqlwStorageAccountName" : {
            "value": "[variables('configuration').storageAccounts.names.vhdStorageAccountNameSQLW]"
          },
          "sqlStorageAccountName" : {
            "value": "[variables('configuration').storageAccounts.names.vhdStorageAccountNameSQL]"
          },
          "sqlStorageAccountType": {
            "value": "[variables('configuration').storageAccounts.types.sql]"
          },
          "sqldiagStorageAccountName" : {
            "value": "[variables('configuration').storageAccounts.names.diagnosticsStorageAccountNameSQL]"
          },
          "sqldiagStorageAccountType": {
            "value": "[variables('configuration').storageAccounts.types.sqldiag]"
          },
          "mgtStorageAccountName" : {
            "value": "[variables('configuration').storageAccounts.names.vhdStorageAccountNameMGT]"
          },
          "mgtStorageAccountType": {
            "value": "[variables('configuration').storageAccounts.types.mgt]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('configuration').network.availabilitySets.names.ad]"
          },
          "mgtAvailabilitySetName": {
            "value": "[variables('configuration').network.availabilitySets.names.mgt]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('configuration').network.availabilitySets.names.sql]"
          },
          "adPDCNicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.adpdc]"
          },
          "adBDCNicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.adbdc]"
          },
          "sql0NicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.sql0]"
          },
          "sql1NicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.sql1]"
          },
          "sqlwNicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.sqlw]"
          },
          "mgtNicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.mgt]"
          },
          "adSubnetRef": {
            "value": "[variables('references').subnets.ad]"
          },
          "mgtSubnetRef": {
            "value": "[variables('references').subnets.mgt]"
          },
          "sqlSubnetRef": {
            "value": "[variables('references').subnets.sql]"
          },
          "adPDCIPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.adpdc]"
          },
          "adBDCIPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.adbdc]"
          },
          "sql0IPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.sql0]"
          },
          "sql1IPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.sql1]"
          },
          "sqlwIPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.sqlw]"
          },
          "mgtIPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.mgt]"
          },
          "domainName": {
            "value": "[variables('configuration').network.domainName]"
          },
          "dnsPrefix": {
            "value": "[variables('configuration').network.dnsPrefix]"
          }
        }
      }
    },
    {
      "name": "LoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "",
      "dependsOn": [
        "Microsoft.Resources/deployments/VirtualNetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateLinks').loadBalancers]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlLBName": {
            "value": "[variables('configuration').loadBalancers.names.sql]"
          },
          "sqlLBFE": {
            "value": "[variables('configuration').loadBalancers.names.sqlFE]"
          },
          "sqlLBIPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.sqlLB]"
          },
          "sqlSubnetRef": {
            "value": "[variables('references').subnets.sql]"
          },
          "sqlLBBE": {
            "value": "[variables('configuration').loadBalancers.names.sqlBE]"
          },
          "sqlLBBEID": {
            "value": "[variables('derivedReferences').sqlBEAddressPoolID]"
          },
          "sqllbFEConfigID": {
            "value": "[variables('derivedReferences').sqllbFEConfigID]"
          },
          "sqllbProbeID": {
            "value": "[variables('derivedReferences').sqllbProbeID]"
          },
          "SQLAOProbe": {
            "value": "[variables('configuration').loadBalancers.SQLAOProbe]"
          },
          "sqlLoadBalancerTemplateURL": {
            "value": "[variables('templateLinks').sqlLoadBalancer]"
          }
        }
      }
    },
    {
      "name": "ActiveDirectory",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "",
      "dependsOn": [
        "Microsoft.Resources/deployments/VirtualNetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateLinks').activeDirectory]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('configuration').network.virtualNetworkName]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('configuration').network.virtualNetworkAddressRange]"
          },
          "adSubnetName": {
            "value": "[variables('configuration').network.subnets.names.ad]"
          },
          "adSubnetPrefix": {
            "value": "[variables('configuration').network.subnets.addressRanges.ad]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vhdStorageAccountName" : {
            "value": "[variables('configuration').storageAccounts.names.vhdStorageAccountNameAD]"
          },
          "dnsPrefix": {
            "value": "[variables('configuration').network.dnsPrefix]"
          },
          "domainName": {
            "value": "[variables('configuration').network.domainName]"
          },
          "adPDCVMName": {
            "value": "[variables('configuration').virtualMachines.names.adpdc]"
          },
          "adBDCVMName": {
            "value": "[variables('configuration').virtualMachines.names.adbdc]"
          },
          "adPDCNicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.adpdc]"
          },
          "adBDCNicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.adbdc]"
          },
          "imagePublisher": {
            "value": "[variables('configuration').virtualMachines.ad.publisher]"
          },
          "imageOffer": {
            "value": "[variables('configuration').virtualMachines.ad.offer]"
          },
          "imageSKU": {
            "value": "[variables('configuration').virtualMachines.ad.sku]"
          },
          "adVMSize": {
            "value": "[variables('configuration').virtualMachines.ad.size]"
          },
          "adPDCIPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.adpdc]"
          },
          "adBDCIPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.adbdc]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('configuration').network.availabilitySets.names.ad]"
          },
          "adDataDiskSize": {
            "value": "[variables('configuration').virtualMachines.ad.diskSize]"
          },
          "adPDCModulesURL": {
            "value": "[variables('modules').adPDC]"
          },
          "adPDCConfigurationFunction": {
            "value": "[variables('functions').adPDCConfiguration]"
          },
          "adBDCConfigurationModulesURL": {
            "value": "[variables('modules').adBDCConfigure]"
          },
          "adBDCConfigurationFunction": {
            "value": "[variables('functions').adBDCConfiguration]"
          },
          "vnetwithDNSTemplateUri": {
            "value": "[variables('templateLinks').vnetTemplate]"
          },
          "configureADBDCTemplateUri": {
            "value": "[variables('templateLinks').configureADBDC]"
          },
          "nicTemplateUri": {
            "value": "[variables('templateLinks').nicTemplate]"
          },
          "adSubnetRef": {
            "value": "[variables('references').subnets.ad]"
          },
          "adBDCPreparationModulesURL": {
            "value": "[variables('modules').adBDCPreparation]"
          },
          "adBDCPreparationFunction": {
            "value": "[variables('functions').adBDCPreparation]"
          },
          "subnets": {
            "value": "[variables('references').subnets.list]"
          }
        }
      }
    },
    {
      "name": "SQLAlwaysOn",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "",
      "dependsOn": [
        "Microsoft.Resources/deployments/LoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateLinks').sqlAlwaysOn]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sql0VMName": {
            "value": "[variables('configuration').virtualMachines.sql0.name]"
          },
          "sql0VMSize": {
            "value": "[variables('configuration').virtualMachines.sql0.size]"
          },
          "sql0ImagePublisher": {
            "value": "[variables('configuration').virtualMachines.sql0.publisher]"
          },
          "sql0ImageOffer": {
            "value": "[variables('configuration').virtualMachines.sql0.offer]"
          },
          "sql0ImageSKU": {
            "value": "[variables('configuration').virtualMachines.sql0.sku]"
          },
          "sql1VMName": {
            "value": "[variables('configuration').virtualMachines.sql1.name]"
          },
          "sql1VMSize": {
            "value": "[variables('configuration').virtualMachines.sql1.size]"
          },
          "sql1ImagePublisher": {
            "value": "[variables('configuration').virtualMachines.sql1.publisher]"
          },
          "sql1ImageOffer": {
            "value": "[variables('configuration').virtualMachines.sql1.offer]"
          },
          "sql1ImageSKU": {
            "value": "[variables('configuration').virtualMachines.sql1.sku]"
          },
          "sqlwImagePublisher": {
            "value": "[variables('configuration').virtualMachines.sqlw.publisher]"
          },
          "sqlwImageOffer": {
            "value": "[variables('configuration').virtualMachines.sqlw.offer]"
          },
          "sqlwImageSKU": {
            "value": "[variables('configuration').virtualMachines.sqlw.sku]"
          },
          "sqlwVMName": {
            "value": "[variables('configuration').virtualMachines.sqlw.name]"
          },
          "sqlwVMSize": {
            "value": "[variables('configuration').virtualMachines.sqlw.size]"
          },
          "sql0StorageAccountName": {
            "value": "[variables('configuration').storageAccounts.names.vhdStorageAccountNameSQL]"
          },
          "diagnosticsStorageAccountNameSQL": {
            "value": "[variables('configuration').storageAccounts.names.diagnosticsStorageAccountNameSQL]"
          },
          "sql0StorageAccountType": {
            "value": "[variables('configuration').storageAccounts.types.sql]"
          },
          "sql1StorageAccountName": {
            "value": "[variables('configuration').storageAccounts.names.vhdStorageAccountNameSQL]"
          },
          "sql1StorageAccountType": {
            "value": "[variables('configuration').storageAccounts.types.sql]"
          },
          "sqlwStorageAccountName": {
            "value": "[variables('configuration').storageAccounts.names.vhdStorageAccountNameSQL]"
          },
          "sqlwStorageAccountType": {
            "value": "[variables('configuration').storageAccounts.types.sql]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('configuration').network.availabilitySets.names.sql]"
          },
          "sqlwNicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.sqlw]"
          },
          "sqlNicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.sql0]"
          },
          "sql1NicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.sql1]"
          },
          "sql0NicName": {
            "value": "[variables('configuration').network.networkInterfaces.names.sql0]"
          },
          "nicTemplateURL": {
            "value": "[variables('templateLinks').updateNic]"
          },
          "configuringAlwaysOnURL": {
            "value": "[variables('templateLinks').configuringAlwaysOn]"
          },
          "preparingAlwaysOnSqlServerURL": {
            "value": "[variables('templateLinks').preparingAlwaysOnSqlServer]"
          },
          "sqlAOPrepareModulesURL": {
            "value": "[variables('modules').sqlAOPrepare]"
          },
          "sqlAOPrepareConfigurationFunction": {
            "value": "[variables('functions').sqlAOPrepareConfiguration]"
          },
          "createClusterModulesURL": {
            "value": "[variables('modules').createCluster]"
          },
          "createClusterConfigurationFunction": {
            "value": "[variables('functions').createClusterConfiguration]"
          },
          "fswModulesURL": {
            "value": "[variables('modules').fileShareWitness]"
          },
          "fswConfigurationFunction": {
            "value": "[variables('functions').fileShareWitnessConfiguration]"
          },
          "sqlSubnetRef": {
            "value": "[variables('references').subnets.sql]"
          },
          "adPDCNicIPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.adpdc]"
          },
          "adBDCNicIPAddress": {
            "value": "[variables('configuration').network.privateIPAddresses.adbdc]"
          },
          "domainName": {
            "value": "[variables('configuration').network.domainName]"
          },
          "sqlAOEPName": {
            "value": "[variables('configuration').sqlAOEPName]"
          },
          "sharePath": {
            "value": "[variables('configuration').sharePath]"
          },
          "clusterName": {
            "value": "[variables('configuration').clusterName]"
          },
          "numberOfDisks": {
            "value": "[variables('configuration').numberOfDisks]"
          },
          "workloadType": {
            "value": "[variables('configuration').workloadType]"
          },
          "autoPatchingDay": {
            "value": "[variables('configuration').autoPatchingDay]"
          },
          "autoPatchingStartHour": {
            "value": "[variables('configuration').autoPatchingStartHour]"
          },
          "numberOfSqlVMDisks": {
            "value": "[variables('configuration').numberOfSqlVMDisks]"
          },
          "autoPatchingEnable": {
            "value": "[variables('configuration').autoPatchingDay]"
          },
          "nicTemplateURL": {
            "value": "[variables('templateLinks').updateNic]"
          },
          "sqlLBName": {
            "value": "[variables('configuration').loadBalancers.names.sql]"
          },
          "adPDCVMName": {
            "value": "[variables('configuration').virtualMachines.names.adpdc]"
          }
        }
      }
    }
  ]
}
